pipeline {
    agent any

    environment {
        DOCKER_IMAGE = 'python-flask-app'
        TOMCAT_IMAGE = 'tomcat:latest'
    }

    stages {
        stage('Build Docker Images') {
            steps {
                script {
                    docker.build(DOCKER_IMAGE, '-f Dockerfile .')
                }
            }
        }

        stage('Deploy Containers') {
            steps {
                script {
                  bat 'docker pull tomcat:latest'
                  bat 'docker rm -f flask_container || true'
                  bat 'docker run -d --name flask_container -p 2020:2020 tomcat:latest'
                  bat 'docker exec -d flask_container /usr/local/tomcat/bin/catalina.sh start'
                  bat 'docker rm -f tomcat_container || true'
                  bat 'docker run -d --name tomcat_container -p 2020:2020 tomcat:latest'
                  bat 'docker exec -d tomcat_container /usr/local/tomcat/bin/catalina.sh start'
                }
            }
        }
    }
}
